%!PS-Adobe-2.0 EPSF-2.0
%%Title: T_ch.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Tue Nov 20 15:40:53 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -70 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (T_ch.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (fogliate)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Nov 20 15:40:53 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Times-Roman reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 210 scalefont setfont
2.000 UL
LT0
1008 840 M
-63 0 V
5750 0 R
63 0 V
stroke
819 840 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 0)]
] -70.0 MRshow
2.000 UL
LT0
1008 1000 M
-31 0 V
5718 0 R
31 0 V
1008 1159 M
-31 0 V
5718 0 R
31 0 V
1008 1319 M
-31 0 V
5718 0 R
31 0 V
1008 1478 M
-31 0 V
5718 0 R
31 0 V
1008 1638 M
-63 0 V
5750 0 R
63 0 V
stroke
819 1638 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 5)]
] -70.0 MRshow
2.000 UL
LT0
1008 1797 M
-31 0 V
5718 0 R
31 0 V
1008 1957 M
-31 0 V
5718 0 R
31 0 V
1008 2116 M
-31 0 V
5718 0 R
31 0 V
1008 2276 M
-31 0 V
5718 0 R
31 0 V
1008 2436 M
-63 0 V
5750 0 R
63 0 V
stroke
819 2436 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 10)]
] -70.0 MRshow
2.000 UL
LT0
1008 2595 M
-31 0 V
5718 0 R
31 0 V
1008 2755 M
-31 0 V
5718 0 R
31 0 V
1008 2914 M
-31 0 V
5718 0 R
31 0 V
1008 3074 M
-31 0 V
5718 0 R
31 0 V
1008 3233 M
-63 0 V
5750 0 R
63 0 V
stroke
819 3233 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 15)]
] -70.0 MRshow
2.000 UL
LT0
1008 3393 M
-31 0 V
5718 0 R
31 0 V
1008 3553 M
-31 0 V
5718 0 R
31 0 V
1008 3712 M
-31 0 V
5718 0 R
31 0 V
1008 3872 M
-31 0 V
5718 0 R
31 0 V
1008 4031 M
-63 0 V
5750 0 R
63 0 V
stroke
819 4031 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 20)]
] -70.0 MRshow
2.000 UL
LT0
1008 4191 M
-31 0 V
5718 0 R
31 0 V
1008 4350 M
-31 0 V
5718 0 R
31 0 V
1008 4510 M
-31 0 V
5718 0 R
31 0 V
1008 4669 M
-31 0 V
5718 0 R
31 0 V
1008 4829 M
-63 0 V
5750 0 R
63 0 V
stroke
819 4829 M
[ [(Times-Roman) 210.0 0.0 true true 0 ( 25)]
] -70.0 MRshow
2.000 UL
LT0
1008 840 M
0 -63 V
0 4052 R
0 63 V
stroke
1008 567 M
[ [(Times-Roman) 210.0 0.0 true true 0 (10)]
[(Times-Roman) 168.0 105.0 true true 0 (0)]
] -91.0 MCshow
2.000 UL
LT0
1795 840 M
0 -31 V
0 4020 R
0 31 V
2255 840 M
0 -31 V
0 4020 R
0 31 V
2581 840 M
0 -31 V
0 4020 R
0 31 V
2835 840 M
0 -31 V
0 4020 R
0 31 V
3042 840 M
0 -31 V
0 4020 R
0 31 V
3217 840 M
0 -31 V
0 4020 R
0 31 V
3368 840 M
0 -31 V
0 4020 R
0 31 V
3502 840 M
0 -31 V
0 4020 R
0 31 V
3621 840 M
0 -63 V
0 4052 R
0 63 V
stroke
3621 567 M
[ [(Times-Roman) 210.0 0.0 true true 0 (10)]
[(Times-Roman) 168.0 105.0 true true 0 (1)]
] -91.0 MCshow
2.000 UL
LT0
4408 840 M
0 -31 V
0 4020 R
0 31 V
4868 840 M
0 -31 V
0 4020 R
0 31 V
5195 840 M
0 -31 V
0 4020 R
0 31 V
5448 840 M
0 -31 V
0 4020 R
0 31 V
5655 840 M
0 -31 V
0 4020 R
0 31 V
5830 840 M
0 -31 V
0 4020 R
0 31 V
5982 840 M
0 -31 V
0 4020 R
0 31 V
6115 840 M
0 -31 V
0 4020 R
0 31 V
6235 840 M
0 -63 V
0 4052 R
0 63 V
stroke
6235 567 M
[ [(Times-Roman) 210.0 0.0 true true 0 (10)]
[(Times-Roman) 168.0 105.0 true true 0 (2)]
] -91.0 MCshow
2.000 UL
LT0
2.000 UL
LT0
1008 4829 N
0 -3989 V
5687 0 V
0 3989 V
-5687 0 V
Z stroke
LCb setrgbcolor
273 2834 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 270.0 0.0 true true 0 (t+)]
] -90.0 MCshow
grestore
LTb
LCb setrgbcolor
3851 210 M
[ [(Times-Roman) 270.0 0.0 true true 0 (y+)]
] -90.0 MCshow
LTb
0.750 UP
2.000 UL
LT0
% Begin plot #1
0.750 UP
3.000 UL
LT0
0.00 0.00 0.00 C LCb setrgbcolor
2565 4564 M
[ [(Times-Roman) 180.0 0.0 true true 0 (DNS)]
] -60.0 MRshow
LT0
0.00 0.00 0.00 C 1291 985 CircleF
1640 1038 CircleF
1943 1098 CircleF
2209 1165 CircleF
2448 1240 CircleF
2663 1322 CircleF
2860 1409 CircleF
3040 1501 CircleF
3207 1596 CircleF
3363 1692 CircleF
3508 1789 CircleF
3644 1884 CircleF
3772 1977 CircleF
3893 2066 CircleF
4008 2150 CircleF
4117 2229 CircleF
4220 2304 CircleF
4319 2373 CircleF
4414 2437 CircleF
4504 2497 CircleF
4591 2553 CircleF
4674 2604 CircleF
4754 2653 CircleF
4831 2697 CircleF
4905 2739 CircleF
4977 2779 CircleF
5046 2816 CircleF
5113 2852 CircleF
5178 2886 CircleF
5241 2920 CircleF
5301 2953 CircleF
5360 2985 CircleF
5417 3016 CircleF
5473 3047 CircleF
5527 3078 CircleF
5579 3108 CircleF
5630 3139 CircleF
5679 3169 CircleF
5728 3199 CircleF
5775 3229 CircleF
5820 3259 CircleF
5865 3289 CircleF
5908 3319 CircleF
5951 3349 CircleF
5992 3379 CircleF
6032 3409 CircleF
6072 3440 CircleF
6110 3470 CircleF
6148 3502 CircleF
6184 3534 CircleF
6220 3566 CircleF
6255 3600 CircleF
6289 3634 CircleF
6322 3669 CircleF
6355 3705 CircleF
6387 3741 CircleF
6418 3778 CircleF
6449 3816 CircleF
6479 3855 CircleF
6508 3894 CircleF
6536 3934 CircleF
6564 3974 CircleF
6592 4016 CircleF
6618 4057 CircleF
6644 4099 CircleF
6670 4142 CircleF
6695 4184 CircleF
2966 4564 CircleF
% End plot #1
% Begin plot #2
3.000 UL
LT0
0.00 0.00 0.00 C LCb setrgbcolor
2565 4354 M
[ [(Times-Roman) 180.0 0.0 true true 0 (k-)]
/Symbol reencodeISO def
[(Symbol) 180.0 0.0 true true 0 (e)]
] -60.0 MRshow
LT0
0.00 0.00 0.00 C 2691 4354 M
551 0 V
1008 991 M
460 19 V
787 138 V
460 117 V
327 90 V
253 71 V
207 59 V
175 51 V
151 44 V
134 40 V
120 35 V
108 33 V
99 31 V
90 28 V
84 27 V
79 26 V
73 24 V
69 23 V
65 22 V
61 21 V
58 21 V
56 20 V
52 19 V
51 19 V
48 18 V
47 18 V
44 17 V
43 17 V
41 17 V
40 16 V
39 16 V
37 16 V
36 15 V
35 15 V
34 15 V
32 15 V
32 15 V
32 14 V
30 14 V
29 15 V
29 14 V
28 13 V
27 14 V
27 14 V
26 13 V
26 14 V
25 13 V
24 13 V
24 13 V
23 13 V
23 13 V
23 13 V
22 13 V
21 13 V
22 13 V
20 12 V
21 13 V
20 13 V
20 12 V
19 13 V
19 12 V
19 12 V
18 13 V
19 12 V
17 12 V
18 13 V
17 12 V
17 12 V
17 12 V
17 13 V
16 12 V
16 12 V
16 12 V
16 12 V
15 12 V
15 12 V
16 11 V
14 12 V
15 12 V
14 12 V
15 12 V
14 11 V
14 12 V
14 11 V
13 12 V
14 12 V
13 11 V
13 11 V
13 12 V
13 11 V
12 12 V
13 11 V
12 11 V
13 11 V
12 12 V
12 11 V
12 11 V
11 11 V
12 11 V
12 11 V
11 12 V
% End plot #2
% Begin plot #3
stroke
LT2
0.00 0.00 0.00 C LCb setrgbcolor
2565 4144 M
[ [(Times-Roman) 180.0 0.0 true true 0 (Spalart-Allmaras)]
] -60.0 MRshow
LT2
0.00 0.00 0.00 C 2691 4144 M
551 0 V
1008 991 M
460 19 V
787 170 V
460 168 V
327 165 V
253 158 V
207 148 V
175 135 V
151 121 V
134 107 V
120 93 V
108 82 V
99 73 V
90 65 V
84 57 V
79 53 V
73 47 V
69 44 V
65 41 V
61 38 V
58 35 V
56 34 V
52 31 V
51 31 V
48 29 V
47 27 V
44 27 V
43 26 V
41 25 V
40 24 V
39 23 V
37 23 V
36 23 V
35 22 V
34 21 V
32 21 V
32 21 V
32 20 V
30 20 V
29 19 V
29 20 V
28 19 V
27 19 V
27 18 V
26 19 V
26 18 V
25 18 V
24 18 V
24 18 V
23 17 V
23 18 V
23 17 V
22 17 V
21 17 V
22 17 V
20 17 V
21 17 V
20 17 V
20 17 V
19 16 V
19 17 V
19 17 V
18 16 V
19 17 V
17 16 V
18 17 V
17 16 V
17 16 V
17 17 V
17 16 V
16 17 V
16 16 V
16 16 V
16 17 V
15 16 V
15 17 V
16 16 V
14 17 V
15 16 V
14 17 V
15 16 V
14 17 V
14 16 V
14 17 V
13 17 V
14 16 V
13 17 V
13 17 V
13 17 V
13 17 V
12 17 V
13 17 V
12 17 V
13 17 V
12 17 V
12 17 V
12 17 V
11 18 V
12 17 V
12 17 V
11 18 V
% End plot #3
% Begin plot #4
stroke
LT3
0.00 0.00 0.00 C LCb setrgbcolor
2565 3934 M
[ [(Times-Roman) 180.0 0.0 true true 0 (realizable)]
] -60.0 MRshow
LT3
0.00 0.00 0.00 C 2691 3934 M
551 0 V
1008 991 M
460 19 V
787 167 V
460 189 V
327 189 V
253 174 V
207 148 V
175 122 V
151 101 V
134 87 V
120 76 V
108 69 V
99 63 V
90 59 V
84 56 V
79 52 V
73 51 V
69 49 V
65 47 V
61 46 V
58 46 V
56 44 V
52 44 V
51 43 V
48 42 V
47 41 V
44 41 V
43 40 V
41 39 V
40 38 V
39 37 V
37 36 V
36 35 V
35 33 V
34 32 V
32 30 V
32 28 V
32 27 V
30 25 V
29 24 V
29 22 V
28 21 V
27 19 V
27 17 V
26 17 V
26 15 V
25 14 V
24 13 V
24 13 V
23 11 V
23 11 V
23 10 V
22 9 V
21 9 V
22 8 V
20 8 V
21 7 V
20 7 V
20 6 V
19 7 V
19 5 V
19 6 V
18 5 V
19 5 V
17 5 V
18 5 V
17 4 V
17 5 V
17 4 V
17 4 V
16 4 V
16 4 V
16 3 V
16 4 V
15 3 V
15 3 V
16 4 V
14 3 V
15 3 V
14 3 V
15 3 V
14 2 V
14 3 V
14 3 V
13 2 V
14 3 V
13 3 V
13 2 V
13 2 V
13 3 V
12 2 V
13 3 V
12 2 V
13 2 V
12 2 V
12 2 V
12 3 V
11 2 V
12 2 V
12 2 V
11 2 V
% End plot #4
stroke
2.000 UL
LT0
1008 4829 N
0 -3989 V
5687 0 V
0 3989 V
-5687 0 V
Z stroke
0.750 UP
2.000 UL
LT0
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
